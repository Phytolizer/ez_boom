use crate::logic::mobj::MobjFlag;
use crate::{misc, sounds::Sfx};
use lazy_static::lazy_static;
use misc::fixed::FRACUNIT;
use parking_lot::RwLock;

lazy_static! {
    pub(crate) static ref STATES: RwLock<[State; Statenum::NumStates as usize]> =
        RwLock::new([State::default(); Statenum::NumStates as usize]);
}

#[derive(Copy, Clone)]
pub(crate) struct State {
    pub(crate) sprite: Spritenum,
    pub(crate) frame: i64,
    pub(crate) tics: i64,
    pub(crate) action: crate::think::ActionF,
    pub(crate) nextstate: usize,
}

impl Default for State {
    fn default() -> Self {
        Self {
            sprite: Spritenum::TNT1,
            frame: 0,
            tics: 0,
            action: || (),
            nextstate: Statenum::NULL as usize,
        }
    }
}

#[allow(dead_code)]
#[derive(Debug)]
pub(crate) struct MobjInfo {
    pub(crate) doomednum: i32,
    pub(crate) spawnstate: usize,
    pub(crate) spawnhealth: i32,
    pub(crate) seestate: usize,
    pub(crate) seesound: usize,
    pub(crate) reactiontime: i32,
    pub(crate) attacksound: usize,
    pub(crate) painstate: usize,
    pub(crate) painchance: i32,
    pub(crate) painsound: usize,
    pub(crate) meleestate: usize,
    pub(crate) missilestate: usize,
    pub(crate) deathstate: usize,
    pub(crate) xdeathstate: usize,
    pub(crate) deathsound: usize,
    pub(crate) speed: i32,
    pub(crate) radius: i32,
    pub(crate) height: i32,
    pub(crate) mass: i32,
    pub(crate) damage: i32,
    pub(crate) activesound: usize,
    pub(crate) flags: u64,
    pub(crate) raisestate: usize,
    pub(crate) droppeditem: MobjType,
}

#[allow(dead_code)]
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
pub(crate) enum Spritenum {
    TROO,
    SHTG,
    PUNG,
    PISG,
    PISF,
    SHTF,
    SHT2,
    CHGG,
    CHGF,
    MISG,
    MISF,
    SAWG,
    PLSG,
    PLSF,
    BFGG,
    BFGF,
    BLUD,
    PUFF,
    BAL1,
    BAL2,
    PLSS,
    PLSE,
    MISL,
    BFS1,
    BFE1,
    BFE2,
    TFOG,
    IFOG,
    PLAY,
    POSS,
    SPOS,
    VILE,
    FIRE,
    FATB,
    FBXP,
    SKEL,
    MANF,
    FATT,
    CPOS,
    SARG,
    HEAD,
    BAL7,
    BOSS,
    BOS2,
    SKUL,
    SPID,
    BSPI,
    APLS,
    APBX,
    CYBR,
    PAIN,
    SSWV,
    KEEN,
    BBRN,
    BOSF,
    ARM1,
    ARM2,
    BAR1,
    BEXP,
    FCAN,
    BON1,
    BON2,
    BKEY,
    RKEY,
    YKEY,
    BSKU,
    RSKU,
    YSKU,
    STIM,
    MEDI,
    SOUL,
    PINV,
    PSTR,
    PINS,
    MEGA,
    SUIT,
    PMAP,
    PVIS,
    CLIP,
    AMMO,
    ROCK,
    BROK,
    CELL,
    CELP,
    SHEL,
    SBOX,
    BPAK,
    BFUG,
    MGUN,
    CSAW,
    LAUN,
    PLAS,
    SHOT,
    SGN2,
    COLU,
    SMT2,
    GOR1,
    POL2,
    POL5,
    POL4,
    POL3,
    POL1,
    POL6,
    GOR2,
    GOR3,
    GOR4,
    GOR5,
    SMIT,
    COL1,
    COL2,
    COL3,
    COL4,
    CAND,
    CBRA,
    COL6,
    TRE1,
    TRE2,
    ELEC,
    CEYE,
    FSKU,
    COL5,
    TBLU,
    TGRN,
    TRED,
    SMBT,
    SMGT,
    SMRT,
    HDB1,
    HDB2,
    HDB3,
    HDB4,
    HDB5,
    HDB6,
    POB1,
    POB2,
    BRS1,
    TLMP,
    TLP2,
    TNT1,
    DOGS,
    PLS1,
    PLS2,
    BON3,
    BON4,
    BLD2,

    SP00,
    SP01,
    SP02,
    SP03,
    SP04,
    SP05,
    SP06,
    SP07,
    SP08,
    SP09,
    SP10,
    SP11,
    SP12,
    SP13,
    SP14,
    SP15,
    SP16,
    SP17,
    SP18,
    SP19,
    SP20,
    SP21,
    SP22,
    SP23,
    SP24,
    SP25,
    SP26,
    SP27,
    SP28,
    SP29,
    SP30,
    SP31,
    SP32,
    SP33,
    SP34,
    SP35,
    SP36,
    SP37,
    SP38,
    SP39,
    SP40,
    SP41,
    SP42,
    SP43,
    SP44,
    SP45,
    SP46,
    SP47,
    SP48,
    SP49,
    SP50,
    SP51,
    SP52,
    SP53,
    SP54,
    SP55,
    SP56,
    SP57,
    SP58,
    SP59,
    SP60,
    SP61,
    SP62,
    SP63,
    SP64,
    SP65,
    SP66,
    SP67,
    SP68,
    SP69,
    SP70,
    SP71,
    SP72,
    SP73,
    SP74,
    SP75,
    SP76,
    SP77,
    SP78,
    SP79,
    SP80,
    SP81,
    SP82,
    SP83,
    SP84,
    SP85,
    SP86,
    SP87,
    SP88,
    SP89,
    SP90,
    SP91,
    SP92,
    SP93,
    SP94,
    SP95,
    SP96,
    SP97,
    SP98,
    SP99,
    NumSprites,
}

#[allow(non_camel_case_types, dead_code)]
#[repr(usize)]
#[derive(Copy, Clone, Eq, PartialEq)]
pub(crate) enum Statenum {
    NULL,
    LIGHTDONE,
    PUNCH,
    PUNCHDOWN,
    PUNCHUP,
    PUNCH1,
    PUNCH2,
    PUNCH3,
    PUNCH4,
    PUNCH5,
    PISTOL,
    PISTOLDOWN,
    PISTOLUP,
    PISTOL1,
    PISTOL2,
    PISTOL3,
    PISTOL4,
    PISTOLFLASH,
    SGUN,
    SGUNDOWN,
    SGUNUP,
    SGUN1,
    SGUN2,
    SGUN3,
    SGUN4,
    SGUN5,
    SGUN6,
    SGUN7,
    SGUN8,
    SGUN9,
    SGUNFLASH1,
    SGUNFLASH2,

    DSGUN,
    DSGUNDOWN,
    DSGUNUP,
    DSGUN1,
    DSGUN2,
    DSGUN3,
    DSGUN4,
    DSGUN5,
    DSGUN6,
    DSGUN7,
    DSGUN8,
    DSGUN9,
    DSGUN10,
    DSNR1,
    DSNR2,
    DSGUNFLASH1,
    DSGUNFLASH2,
    CHAIN,
    CHAINDOWN,
    CHAINUP,
    CHAIN1,
    CHAIN2,
    CHAIN3,
    CHAINFLASH1,
    CHAINFLASH2,
    MISSILE,
    MISSILEDOWN,
    MISSILEUP,
    MISSILE1,
    MISSILE2,
    MISSILE3,
    MISSILEFLASH1,
    MISSILEFLASH2,
    MISSILEFLASH3,
    MISSILEFLASH4,
    SAW,
    SAWB,
    SAWDOWN,
    SAWUP,
    SAW1,
    SAW2,
    SAW3,
    PLASMA,
    PLASMADOWN,
    PLASMAUP,
    PLASMA1,
    PLASMA2,
    PLASMAFLASH1,
    PLASMAFLASH2,
    BFG,
    BFGDOWN,
    BFGUP,
    BFG1,
    BFG2,
    BFG3,
    BFG4,
    BFGFLASH1,
    BFGFLASH2,
    BLOOD1,
    BLOOD2,
    BLOOD3,
    PUFF1,
    PUFF2,
    PUFF3,
    PUFF4,
    TBALL1,
    TBALL2,
    TBALLX1,
    TBALLX2,
    TBALLX3,
    RBALL1,
    RBALL2,
    RBALLX1,
    RBALLX2,
    RBALLX3,
    PLASBALL,
    PLASBALL2,
    PLASEXP,
    PLASEXP2,
    PLASEXP3,
    PLASEXP4,
    PLASEXP5,
    ROCKET,
    BFGSHOT,
    BFGSHOT2,
    BFGLAND,
    BFGLAND2,
    BFGLAND3,
    BFGLAND4,
    BFGLAND5,
    BFGLAND6,
    BFGEXP,
    BFGEXP2,
    BFGEXP3,
    BFGEXP4,
    EXPLODE1,
    EXPLODE2,
    EXPLODE3,
    TFOG,
    TFOG01,
    TFOG02,
    TFOG2,
    TFOG3,
    TFOG4,
    TFOG5,
    TFOG6,
    TFOG7,
    TFOG8,
    TFOG9,
    TFOG10,
    IFOG,
    IFOG01,
    IFOG02,
    IFOG2,
    IFOG3,
    IFOG4,
    IFOG5,
    PLAY,
    PLAY_RUN1,
    PLAY_RUN2,
    PLAY_RUN3,
    PLAY_RUN4,
    PLAY_ATK1,
    PLAY_ATK2,
    PLAY_PAIN,
    PLAY_PAIN2,
    PLAY_DIE1,
    PLAY_DIE2,
    PLAY_DIE3,
    PLAY_DIE4,
    PLAY_DIE5,
    PLAY_DIE6,
    PLAY_DIE7,
    PLAY_XDIE1,
    PLAY_XDIE2,
    PLAY_XDIE3,
    PLAY_XDIE4,
    PLAY_XDIE5,
    PLAY_XDIE6,
    PLAY_XDIE7,
    PLAY_XDIE8,
    PLAY_XDIE9,
    POSS_STND,
    POSS_STND2,
    POSS_RUN1,
    POSS_RUN2,
    POSS_RUN3,
    POSS_RUN4,
    POSS_RUN5,
    POSS_RUN6,
    POSS_RUN7,
    POSS_RUN8,
    POSS_ATK1,
    POSS_ATK2,
    POSS_ATK3,
    POSS_PAIN,
    POSS_PAIN2,
    POSS_DIE1,
    POSS_DIE2,
    POSS_DIE3,
    POSS_DIE4,
    POSS_DIE5,
    POSS_XDIE1,
    POSS_XDIE2,
    POSS_XDIE3,
    POSS_XDIE4,
    POSS_XDIE5,
    POSS_XDIE6,
    POSS_XDIE7,
    POSS_XDIE8,
    POSS_XDIE9,
    POSS_RAISE1,
    POSS_RAISE2,
    POSS_RAISE3,
    POSS_RAISE4,
    SPOS_STND,
    SPOS_STND2,
    SPOS_RUN1,
    SPOS_RUN2,
    SPOS_RUN3,
    SPOS_RUN4,
    SPOS_RUN5,
    SPOS_RUN6,
    SPOS_RUN7,
    SPOS_RUN8,
    SPOS_ATK1,
    SPOS_ATK2,
    SPOS_ATK3,
    SPOS_PAIN,
    SPOS_PAIN2,
    SPOS_DIE1,
    SPOS_DIE2,
    SPOS_DIE3,
    SPOS_DIE4,
    SPOS_DIE5,
    SPOS_XDIE1,
    SPOS_XDIE2,
    SPOS_XDIE3,
    SPOS_XDIE4,
    SPOS_XDIE5,
    SPOS_XDIE6,
    SPOS_XDIE7,
    SPOS_XDIE8,
    SPOS_XDIE9,
    SPOS_RAISE1,
    SPOS_RAISE2,
    SPOS_RAISE3,
    SPOS_RAISE4,
    SPOS_RAISE5,
    VILE_STND,
    VILE_STND2,
    VILE_RUN1,
    VILE_RUN2,
    VILE_RUN3,
    VILE_RUN4,
    VILE_RUN5,
    VILE_RUN6,
    VILE_RUN7,
    VILE_RUN8,
    VILE_RUN9,
    VILE_RUN10,
    VILE_RUN11,
    VILE_RUN12,
    VILE_ATK1,
    VILE_ATK2,
    VILE_ATK3,
    VILE_ATK4,
    VILE_ATK5,
    VILE_ATK6,
    VILE_ATK7,
    VILE_ATK8,
    VILE_ATK9,
    VILE_ATK10,
    VILE_ATK11,
    VILE_HEAL1,
    VILE_HEAL2,
    VILE_HEAL3,
    VILE_PAIN,
    VILE_PAIN2,
    VILE_DIE1,
    VILE_DIE2,
    VILE_DIE3,
    VILE_DIE4,
    VILE_DIE5,
    VILE_DIE6,
    VILE_DIE7,
    VILE_DIE8,
    VILE_DIE9,
    VILE_DIE10,
    FIRE1,
    FIRE2,
    FIRE3,
    FIRE4,
    FIRE5,
    FIRE6,
    FIRE7,
    FIRE8,
    FIRE9,
    FIRE10,
    FIRE11,
    FIRE12,
    FIRE13,
    FIRE14,
    FIRE15,
    FIRE16,
    FIRE17,
    FIRE18,
    FIRE19,
    FIRE20,
    FIRE21,
    FIRE22,
    FIRE23,
    FIRE24,
    FIRE25,
    FIRE26,
    FIRE27,
    FIRE28,
    FIRE29,
    FIRE30,
    SMOKE1,
    SMOKE2,
    SMOKE3,
    SMOKE4,
    SMOKE5,
    TRACER,
    TRACER2,
    TRACEEXP1,
    TRACEEXP2,
    TRACEEXP3,
    SKEL_STND,
    SKEL_STND2,
    SKEL_RUN1,
    SKEL_RUN2,
    SKEL_RUN3,
    SKEL_RUN4,
    SKEL_RUN5,
    SKEL_RUN6,
    SKEL_RUN7,
    SKEL_RUN8,
    SKEL_RUN9,
    SKEL_RUN10,
    SKEL_RUN11,
    SKEL_RUN12,
    SKEL_FIST1,
    SKEL_FIST2,
    SKEL_FIST3,
    SKEL_FIST4,
    SKEL_MISS1,
    SKEL_MISS2,
    SKEL_MISS3,
    SKEL_MISS4,
    SKEL_PAIN,
    SKEL_PAIN2,
    SKEL_DIE1,
    SKEL_DIE2,
    SKEL_DIE3,
    SKEL_DIE4,
    SKEL_DIE5,
    SKEL_DIE6,
    SKEL_RAISE1,
    SKEL_RAISE2,
    SKEL_RAISE3,
    SKEL_RAISE4,
    SKEL_RAISE5,
    SKEL_RAISE6,
    FATSHOT1,
    FATSHOT2,
    FATSHOTX1,
    FATSHOTX2,
    FATSHOTX3,
    FATT_STND,
    FATT_STND2,
    FATT_RUN1,
    FATT_RUN2,
    FATT_RUN3,
    FATT_RUN4,
    FATT_RUN5,
    FATT_RUN6,
    FATT_RUN7,
    FATT_RUN8,
    FATT_RUN9,
    FATT_RUN10,
    FATT_RUN11,
    FATT_RUN12,
    FATT_ATK1,
    FATT_ATK2,
    FATT_ATK3,
    FATT_ATK4,
    FATT_ATK5,
    FATT_ATK6,
    FATT_ATK7,
    FATT_ATK8,
    FATT_ATK9,
    FATT_ATK10,
    FATT_PAIN,
    FATT_PAIN2,
    FATT_DIE1,
    FATT_DIE2,
    FATT_DIE3,
    FATT_DIE4,
    FATT_DIE5,
    FATT_DIE6,
    FATT_DIE7,
    FATT_DIE8,
    FATT_DIE9,
    FATT_DIE10,
    FATT_RAISE1,
    FATT_RAISE2,
    FATT_RAISE3,
    FATT_RAISE4,
    FATT_RAISE5,
    FATT_RAISE6,
    FATT_RAISE7,
    FATT_RAISE8,
    CPOS_STND,
    CPOS_STND2,
    CPOS_RUN1,
    CPOS_RUN2,
    CPOS_RUN3,
    CPOS_RUN4,
    CPOS_RUN5,
    CPOS_RUN6,
    CPOS_RUN7,
    CPOS_RUN8,
    CPOS_ATK1,
    CPOS_ATK2,
    CPOS_ATK3,
    CPOS_ATK4,
    CPOS_PAIN,
    CPOS_PAIN2,
    CPOS_DIE1,
    CPOS_DIE2,
    CPOS_DIE3,
    CPOS_DIE4,
    CPOS_DIE5,
    CPOS_DIE6,
    CPOS_DIE7,
    CPOS_XDIE1,
    CPOS_XDIE2,
    CPOS_XDIE3,
    CPOS_XDIE4,
    CPOS_XDIE5,
    CPOS_XDIE6,
    CPOS_RAISE1,
    CPOS_RAISE2,
    CPOS_RAISE3,
    CPOS_RAISE4,
    CPOS_RAISE5,
    CPOS_RAISE6,
    CPOS_RAISE7,
    TROO_STND,
    TROO_STND2,
    TROO_RUN1,
    TROO_RUN2,
    TROO_RUN3,
    TROO_RUN4,
    TROO_RUN5,
    TROO_RUN6,
    TROO_RUN7,
    TROO_RUN8,
    TROO_ATK1,
    TROO_ATK2,
    TROO_ATK3,
    TROO_PAIN,
    TROO_PAIN2,
    TROO_DIE1,
    TROO_DIE2,
    TROO_DIE3,
    TROO_DIE4,
    TROO_DIE5,
    TROO_XDIE1,
    TROO_XDIE2,
    TROO_XDIE3,
    TROO_XDIE4,
    TROO_XDIE5,
    TROO_XDIE6,
    TROO_XDIE7,
    TROO_XDIE8,
    TROO_RAISE1,
    TROO_RAISE2,
    TROO_RAISE3,
    TROO_RAISE4,
    TROO_RAISE5,
    SARG_STND,
    SARG_STND2,
    SARG_RUN1,
    SARG_RUN2,
    SARG_RUN3,
    SARG_RUN4,
    SARG_RUN5,
    SARG_RUN6,
    SARG_RUN7,
    SARG_RUN8,
    SARG_ATK1,
    SARG_ATK2,
    SARG_ATK3,
    SARG_PAIN,
    SARG_PAIN2,
    SARG_DIE1,
    SARG_DIE2,
    SARG_DIE3,
    SARG_DIE4,
    SARG_DIE5,
    SARG_DIE6,
    SARG_RAISE1,
    SARG_RAISE2,
    SARG_RAISE3,
    SARG_RAISE4,
    SARG_RAISE5,
    SARG_RAISE6,
    HEAD_STND,
    HEAD_RUN1,
    HEAD_ATK1,
    HEAD_ATK2,
    HEAD_ATK3,
    HEAD_PAIN,
    HEAD_PAIN2,
    HEAD_PAIN3,
    HEAD_DIE1,
    HEAD_DIE2,
    HEAD_DIE3,
    HEAD_DIE4,
    HEAD_DIE5,
    HEAD_DIE6,
    HEAD_RAISE1,
    HEAD_RAISE2,
    HEAD_RAISE3,
    HEAD_RAISE4,
    HEAD_RAISE5,
    HEAD_RAISE6,
    BRBALL1,
    BRBALL2,
    BRBALLX1,
    BRBALLX2,
    BRBALLX3,
    BOSS_STND,
    BOSS_STND2,
    BOSS_RUN1,
    BOSS_RUN2,
    BOSS_RUN3,
    BOSS_RUN4,
    BOSS_RUN5,
    BOSS_RUN6,
    BOSS_RUN7,
    BOSS_RUN8,
    BOSS_ATK1,
    BOSS_ATK2,
    BOSS_ATK3,
    BOSS_PAIN,
    BOSS_PAIN2,
    BOSS_DIE1,
    BOSS_DIE2,
    BOSS_DIE3,
    BOSS_DIE4,
    BOSS_DIE5,
    BOSS_DIE6,
    BOSS_DIE7,
    BOSS_RAISE1,
    BOSS_RAISE2,
    BOSS_RAISE3,
    BOSS_RAISE4,
    BOSS_RAISE5,
    BOSS_RAISE6,
    BOSS_RAISE7,
    BOS2_STND,
    BOS2_STND2,
    BOS2_RUN1,
    BOS2_RUN2,
    BOS2_RUN3,
    BOS2_RUN4,
    BOS2_RUN5,
    BOS2_RUN6,
    BOS2_RUN7,
    BOS2_RUN8,
    BOS2_ATK1,
    BOS2_ATK2,
    BOS2_ATK3,
    BOS2_PAIN,
    BOS2_PAIN2,
    BOS2_DIE1,
    BOS2_DIE2,
    BOS2_DIE3,
    BOS2_DIE4,
    BOS2_DIE5,
    BOS2_DIE6,
    BOS2_DIE7,
    BOS2_RAISE1,
    BOS2_RAISE2,
    BOS2_RAISE3,
    BOS2_RAISE4,
    BOS2_RAISE5,
    BOS2_RAISE6,
    BOS2_RAISE7,
    SKULL_STND,
    SKULL_STND2,
    SKULL_RUN1,
    SKULL_RUN2,
    SKULL_ATK1,
    SKULL_ATK2,
    SKULL_ATK3,
    SKULL_ATK4,
    SKULL_PAIN,
    SKULL_PAIN2,
    SKULL_DIE1,
    SKULL_DIE2,
    SKULL_DIE3,
    SKULL_DIE4,
    SKULL_DIE5,
    SKULL_DIE6,
    SPID_STND,
    SPID_STND2,
    SPID_RUN1,
    SPID_RUN2,
    SPID_RUN3,
    SPID_RUN4,
    SPID_RUN5,
    SPID_RUN6,
    SPID_RUN7,
    SPID_RUN8,
    SPID_RUN9,
    SPID_RUN10,
    SPID_RUN11,
    SPID_RUN12,
    SPID_ATK1,
    SPID_ATK2,
    SPID_ATK3,
    SPID_ATK4,
    SPID_PAIN,
    SPID_PAIN2,
    SPID_DIE1,
    SPID_DIE2,
    SPID_DIE3,
    SPID_DIE4,
    SPID_DIE5,
    SPID_DIE6,
    SPID_DIE7,
    SPID_DIE8,
    SPID_DIE9,
    SPID_DIE10,
    SPID_DIE11,
    BSPI_STND,
    BSPI_STND2,
    BSPI_SIGHT,
    BSPI_RUN1,
    BSPI_RUN2,
    BSPI_RUN3,
    BSPI_RUN4,
    BSPI_RUN5,
    BSPI_RUN6,
    BSPI_RUN7,
    BSPI_RUN8,
    BSPI_RUN9,
    BSPI_RUN10,
    BSPI_RUN11,
    BSPI_RUN12,
    BSPI_ATK1,
    BSPI_ATK2,
    BSPI_ATK3,
    BSPI_ATK4,
    BSPI_PAIN,
    BSPI_PAIN2,
    BSPI_DIE1,
    BSPI_DIE2,
    BSPI_DIE3,
    BSPI_DIE4,
    BSPI_DIE5,
    BSPI_DIE6,
    BSPI_DIE7,
    BSPI_RAISE1,
    BSPI_RAISE2,
    BSPI_RAISE3,
    BSPI_RAISE4,
    BSPI_RAISE5,
    BSPI_RAISE6,
    BSPI_RAISE7,
    ARACH_PLAZ,
    ARACH_PLAZ2,
    ARACH_PLEX,
    ARACH_PLEX2,
    ARACH_PLEX3,
    ARACH_PLEX4,
    ARACH_PLEX5,
    CYBER_STND,
    CYBER_STND2,
    CYBER_RUN1,
    CYBER_RUN2,
    CYBER_RUN3,
    CYBER_RUN4,
    CYBER_RUN5,
    CYBER_RUN6,
    CYBER_RUN7,
    CYBER_RUN8,
    CYBER_ATK1,
    CYBER_ATK2,
    CYBER_ATK3,
    CYBER_ATK4,
    CYBER_ATK5,
    CYBER_ATK6,
    CYBER_PAIN,
    CYBER_DIE1,
    CYBER_DIE2,
    CYBER_DIE3,
    CYBER_DIE4,
    CYBER_DIE5,
    CYBER_DIE6,
    CYBER_DIE7,
    CYBER_DIE8,
    CYBER_DIE9,
    CYBER_DIE10,
    PAIN_STND,
    PAIN_RUN1,
    PAIN_RUN2,
    PAIN_RUN3,
    PAIN_RUN4,
    PAIN_RUN5,
    PAIN_RUN6,
    PAIN_ATK1,
    PAIN_ATK2,
    PAIN_ATK3,
    PAIN_ATK4,
    PAIN_PAIN,
    PAIN_PAIN2,
    PAIN_DIE1,
    PAIN_DIE2,
    PAIN_DIE3,
    PAIN_DIE4,
    PAIN_DIE5,
    PAIN_DIE6,
    PAIN_RAISE1,
    PAIN_RAISE2,
    PAIN_RAISE3,
    PAIN_RAISE4,
    PAIN_RAISE5,
    PAIN_RAISE6,
    SSWV_STND,
    SSWV_STND2,
    SSWV_RUN1,
    SSWV_RUN2,
    SSWV_RUN3,
    SSWV_RUN4,
    SSWV_RUN5,
    SSWV_RUN6,
    SSWV_RUN7,
    SSWV_RUN8,
    SSWV_ATK1,
    SSWV_ATK2,
    SSWV_ATK3,
    SSWV_ATK4,
    SSWV_ATK5,
    SSWV_ATK6,
    SSWV_PAIN,
    SSWV_PAIN2,
    SSWV_DIE1,
    SSWV_DIE2,
    SSWV_DIE3,
    SSWV_DIE4,
    SSWV_DIE5,
    SSWV_XDIE1,
    SSWV_XDIE2,
    SSWV_XDIE3,
    SSWV_XDIE4,
    SSWV_XDIE5,
    SSWV_XDIE6,
    SSWV_XDIE7,
    SSWV_XDIE8,
    SSWV_XDIE9,
    SSWV_RAISE1,
    SSWV_RAISE2,
    SSWV_RAISE3,
    SSWV_RAISE4,
    SSWV_RAISE5,
    KEENSTND,
    COMMKEEN,
    COMMKEEN2,
    COMMKEEN3,
    COMMKEEN4,
    COMMKEEN5,
    COMMKEEN6,
    COMMKEEN7,
    COMMKEEN8,
    COMMKEEN9,
    COMMKEEN10,
    COMMKEEN11,
    COMMKEEN12,
    KEENPAIN,
    KEENPAIN2,
    BRAIN,
    BRAIN_PAIN,
    BRAIN_DIE1,
    BRAIN_DIE2,
    BRAIN_DIE3,
    BRAIN_DIE4,
    BRAINEYE,
    BRAINEYESEE,
    BRAINEYE1,
    SPAWN1,
    SPAWN2,
    SPAWN3,
    SPAWN4,
    SPAWNFIRE1,
    SPAWNFIRE2,
    SPAWNFIRE3,
    SPAWNFIRE4,
    SPAWNFIRE5,
    SPAWNFIRE6,
    SPAWNFIRE7,
    SPAWNFIRE8,
    BRAINEXPLODE1,
    BRAINEXPLODE2,
    BRAINEXPLODE3,
    ARM1,
    ARM1A,
    ARM2,
    ARM2A,
    BAR1,
    BAR2,
    BEXP,
    BEXP2,
    BEXP3,
    BEXP4,
    BEXP5,
    BBAR1,
    BBAR2,
    BBAR3,
    BON1,
    BON1A,
    BON1B,
    BON1C,
    BON1D,
    BON1E,
    BON2,
    BON2A,
    BON2B,
    BON2C,
    BON2D,
    BON2E,
    BKEY,
    BKEY2,
    RKEY,
    RKEY2,
    YKEY,
    YKEY2,
    BSKULL,
    BSKULL2,
    RSKULL,
    RSKULL2,
    YSKULL,
    YSKULL2,
    STIM,
    MEDI,
    SOUL,
    SOUL2,
    SOUL3,
    SOUL4,
    SOUL5,
    SOUL6,
    PINV,
    PINV2,
    PINV3,
    PINV4,
    PSTR,
    PINS,
    PINS2,
    PINS3,
    PINS4,
    MEGA,
    MEGA2,
    MEGA3,
    MEGA4,
    SUIT,
    PMAP,
    PMAP2,
    PMAP3,
    PMAP4,
    PMAP5,
    PMAP6,
    PVIS,
    PVIS2,
    CLIP,
    AMMO,
    ROCK,
    BROK,
    CELL,
    CELP,
    SHEL,
    SBOX,
    BPAK,
    BFUG,
    MGUN,
    CSAW,
    LAUN,
    PLAS,
    SHOT,
    SHOT2,
    COLU,
    STALAG,
    BLOODYTWITCH,
    BLOODYTWITCH2,
    BLOODYTWITCH3,
    BLOODYTWITCH4,
    DEADTORSO,
    DEADBOTTOM,
    HEADSONSTICK,
    GIBS,
    HEADONASTICK,
    HEADCANDLES,
    HEADCANDLES2,
    DEADSTICK,
    LIVESTICK,
    LIVESTICK2,
    MEAT2,
    MEAT3,
    MEAT4,
    MEAT5,
    STALAGTITE,
    TALLGRNCOL,
    SHRTGRNCOL,
    TALLREDCOL,
    SHRTREDCOL,
    CANDLESTIK,
    CANDELABRA,
    SKULLCOL,
    TORCHTREE,
    BIGTREE,
    TECHPILLAR,
    EVILEYE,
    EVILEYE2,
    EVILEYE3,
    EVILEYE4,
    FLOATSKULL,
    FLOATSKULL2,
    FLOATSKULL3,
    HEARTCOL,
    HEARTCOL2,
    BLUETORCH,
    BLUETORCH2,
    BLUETORCH3,
    BLUETORCH4,
    GREENTORCH,
    GREENTORCH2,
    GREENTORCH3,
    GREENTORCH4,
    REDTORCH,
    REDTORCH2,
    REDTORCH3,
    REDTORCH4,
    BTORCHSHRT,
    BTORCHSHRT2,
    BTORCHSHRT3,
    BTORCHSHRT4,
    GTORCHSHRT,
    GTORCHSHRT2,
    GTORCHSHRT3,
    GTORCHSHRT4,
    RTORCHSHRT,
    RTORCHSHRT2,
    RTORCHSHRT3,
    RTORCHSHRT4,
    HANGNOGUTS,
    HANGBNOBRAIN,
    HANGTLOOKDN,
    HANGTSKULL,
    HANGTLOOKUP,
    HANGTNOBRAIN,
    COLONGIBS,
    SMALLPOOL,
    BRAINSTEM,
    TECHLAMP,
    TECHLAMP2,
    TECHLAMP3,
    TECHLAMP4,
    TECH2LAMP,
    TECH2LAMP2,
    TECH2LAMP3,
    TECH2LAMP4,
    TNT1, /* add state for invisible sprite          phares 3/8/98  */

    GRENADE,  /* killough 8/9/98: grenade launcher */
    DETONATE, /* killough 8/9/98: detonation of objects */
    DETONATE2,
    DETONATE3,

    // always count dog states, even if dogs are disabled
    DOGS_STND, /* killough 7/19/98: Marine's best friend :) */
    DOGS_STND2,
    DOGS_RUN1,
    DOGS_RUN2,
    DOGS_RUN3,
    DOGS_RUN4,
    DOGS_RUN5,
    DOGS_RUN6,
    DOGS_RUN7,
    DOGS_RUN8,
    DOGS_ATK1,
    DOGS_ATK2,
    DOGS_ATK3,
    DOGS_PAIN,
    DOGS_PAIN2,
    DOGS_DIE1,
    DOGS_DIE2,
    DOGS_DIE3,
    DOGS_DIE4,
    DOGS_DIE5,
    DOGS_DIE6,
    DOGS_RAISE1,
    DOGS_RAISE2,
    DOGS_RAISE3,
    DOGS_RAISE4,
    DOGS_RAISE5,
    DOGS_RAISE6,

    // add dummy beta bfg / lost soul frames for dehacked compatibility
    // fixes bug #1576151 (part 2)
    OLDBFG1, // killough 7/11/98: the old BFG's 43 firing frames
    OLDBFG42 = Statenum::OLDBFG1 as usize + 41,
    OLDBFG43,

    PLS1BALL, // killough 7/19/98: first plasma fireball in the beta
    PLS1BALL2,
    PLS1EXP,
    PLS1EXP2,
    PLS1EXP3,
    PLS1EXP4,
    PLS1EXP5,

    PLS2BALL, // killough 7/19/98: second plasma fireball in the beta
    PLS2BALL2,
    PLS2BALLX1,
    PLS2BALLX2,
    PLS2BALLX3,
    BON3, // killough 7/11/98: evil sceptre in beta version
    BON4, // killough 7/11/98: unholy bible in beta version

    // killough 10/98: beta lost souls were different from their modern cousins
    BSKUL_STND,
    BSKUL_RUN1,
    BSKUL_RUN2,
    BSKUL_RUN3,
    BSKUL_RUN4,
    BSKUL_ATK1,
    BSKUL_ATK2,
    BSKUL_ATK3,
    BSKUL_PAIN1,
    BSKUL_PAIN2,
    BSKUL_PAIN3,
    BSKUL_DIE1,
    BSKUL_DIE2,
    BSKUL_DIE3,
    BSKUL_DIE4,
    BSKUL_DIE5,
    BSKUL_DIE6,
    BSKUL_DIE7,
    BSKUL_DIE8,

    MUSHROOM, /* killough 10/98: mushroom explosion effect */

    PLAY_GDIE1,
    PLAY_GDIE2,
    PLAY_GDIE3,
    PLAY_GDIE4,
    PLAY_GDIE5,
    PLAY_GDIE6,
    PLAY_GDIE7,
    PLAY_GDIE8,
    PLAY_GDIE9,

    ExtraStates = 1089,
    NumStates = 4000,
}

#[allow(dead_code)]
#[derive(Debug)]
pub(crate) enum MobjType {
    NULL = -1, // ferk: null/invalid mobj (zero is reserved for MT_PLAYER)
    PLAYER,
    POSSESSED,
    SHOTGUY,
    VILE,
    FIRE,
    UNDEAD,
    TRACER,
    SMOKE,
    FATSO,
    FATSHOT,
    CHAINGUY,
    TROOP,
    SERGEANT,
    SHADOWS,
    HEAD,
    BRUISER,
    BRUISERSHOT,
    KNIGHT,
    SKULL,
    SPIDER,
    BABY,
    CYBORG,
    PAIN,
    WOLFSS,
    KEEN,
    BOSSBRAIN,
    BOSSSPIT,
    BOSSTARGET,
    SPAWNSHOT,
    SPAWNFIRE,
    BARREL,
    TROOPSHOT,
    HEADSHOT,
    ROCKET,
    PLASMA,
    BFG,
    ARACHPLAZ,
    PUFF,
    BLOOD,
    TFOG,
    IFOG,
    TELEPORTMAN,
    EXTRABFG,
    MISC0,
    MISC1,
    MISC2,
    MISC3,
    MISC4,
    MISC5,
    MISC6,
    MISC7,
    MISC8,
    MISC9,
    MISC10,
    MISC11,
    MISC12,
    INV,
    MISC13,
    INS,
    MISC14,
    MISC15,
    MISC16,
    MEGA,
    CLIP,
    MISC17,
    MISC18,
    MISC19,
    MISC20,
    MISC21,
    MISC22,
    MISC23,
    MISC24,
    MISC25,
    CHAINGUN,
    MISC26,
    MISC27,
    MISC28,
    SHOTGUN,
    SUPERSHOTGUN,
    MISC29,
    MISC30,
    MISC31,
    MISC32,
    MISC33,
    MISC34,
    MISC35,
    MISC36,
    MISC37,
    MISC38,
    MISC39,
    MISC40,
    MISC41,
    MISC42,
    MISC43,
    MISC44,
    MISC45,
    MISC46,
    MISC47,
    MISC48,
    MISC49,
    MISC50,
    MISC51,
    MISC52,
    MISC53,
    MISC54,
    MISC55,
    MISC56,
    MISC57,
    MISC58,
    MISC59,
    MISC60,
    MISC61,
    MISC62,
    MISC63,
    MISC64,
    MISC65,
    MISC66,
    MISC67,
    MISC68,
    MISC69,
    MISC70,
    MISC71,
    MISC72,
    MISC73,
    MISC74,
    MISC75,
    MISC76,
    MISC77,
    MISC78,
    MISC79,
    MISC80,
    MISC81,
    MISC82,
    MISC83,
    MISC84,
    MISC85,
    MISC86,
    PUSH,    /* controls push source - phares */
    PULL,    /* controls pull source - phares 3/20/98 */
    DOGS,    /* killough 7/19/98: Marine's best friend */
    PLASMA1, // killough 7/11/98: first  of alternating beta plasma fireballs
    PLASMA2, // killough 7/11/98: second of alternating beta plasma fireballs
    SCEPTRE, // killough 7/11/98: evil sceptre in beta version
    BIBLE,   // killough 7/11/98: unholy bible in beta version

    MUSICSOURCE, /* MUSINFO lump */
    GIBDTH,

    /* proff 11/22/98: Andy Baker's stealth monsters (next 12)
     * cph - moved below the MBF stuff, no need to displace them */
    STEALTHBABY,
    STEALTHVILE,
    STEALTHBRUISER,
    STEALTHHEAD,
    STEALTHCHAINGUY,
    STEALTHSERGEANT,
    STEALTHKNIGHT,
    STEALTHIMP,
    STEALTHFATSO,
    STEALTHUNDEAD,
    STEALTHSHOTGUY,
    STEALTHZOMBIE,

    // 100 extra mobjs to use in dehacked patches
    // FIXME this was originally 150, does it break things to change it?
    EXTRA00 = 160,
    EXTRA01,
    EXTRA02,
    EXTRA03,
    EXTRA04,
    EXTRA05,
    EXTRA06,
    EXTRA07,
    EXTRA08,
    EXTRA09,
    EXTRA10,
    EXTRA11,
    EXTRA12,
    EXTRA13,
    EXTRA14,
    EXTRA15,
    EXTRA16,
    EXTRA17,
    EXTRA18,
    EXTRA19,
    EXTRA20,
    EXTRA21,
    EXTRA22,
    EXTRA23,
    EXTRA24,
    EXTRA25,
    EXTRA26,
    EXTRA27,
    EXTRA28,
    EXTRA29,
    EXTRA30,
    EXTRA31,
    EXTRA32,
    EXTRA33,
    EXTRA34,
    EXTRA35,
    EXTRA36,
    EXTRA37,
    EXTRA38,
    EXTRA39,
    EXTRA40,
    EXTRA41,
    EXTRA42,
    EXTRA43,
    EXTRA44,
    EXTRA45,
    EXTRA46,
    EXTRA47,
    EXTRA48,
    EXTRA49,
    EXTRA50,
    EXTRA51,
    EXTRA52,
    EXTRA53,
    EXTRA54,
    EXTRA55,
    EXTRA56,
    EXTRA57,
    EXTRA58,
    EXTRA59,
    EXTRA60,
    EXTRA61,
    EXTRA62,
    EXTRA63,
    EXTRA64,
    EXTRA65,
    EXTRA66,
    EXTRA67,
    EXTRA68,
    EXTRA69,
    EXTRA70,
    EXTRA71,
    EXTRA72,
    EXTRA73,
    EXTRA74,
    EXTRA75,
    EXTRA76,
    EXTRA77,
    EXTRA78,
    EXTRA79,
    EXTRA80,
    EXTRA81,
    EXTRA82,
    EXTRA83,
    EXTRA84,
    EXTRA85,
    EXTRA86,
    EXTRA87,
    EXTRA88,
    EXTRA89,
    EXTRA90,
    EXTRA91,
    EXTRA92,
    EXTRA93,
    EXTRA94,
    EXTRA95,
    EXTRA96,
    EXTRA97,
    EXTRA98,
    EXTRA99,

    NUMMOBJTYPES, // Counter of how many there are
}

pub(crate) const SPRNAMES: [&str; Spritenum::NumSprites as usize + 1] = [
    "TROO", "SHTG", "PUNG", "PISG", "PISF", "SHTF", "SHT2", "CHGG", "CHGF", "MISG", "MISF", "SAWG",
    "PLSG", "PLSF", "BFGG", "BFGF", "BLUD", "PUFF", "BAL1", "BAL2", "PLSS", "PLSE", "MISL", "BFS1",
    "BFE1", "BFE2", "TFOG", "IFOG", "PLAY", "POSS", "SPOS", "VILE", "FIRE", "FATB", "FBXP", "SKEL",
    "MANF", "FATT", "CPOS", "SARG", "HEAD", "BAL7", "BOSS", "BOS2", "SKUL", "SPID", "BSPI", "APLS",
    "APBX", "CYBR", "PAIN", "SSWV", "KEEN", "BBRN", "BOSF", "ARM1", "ARM2", "BAR1", "BEXP", "FCAN",
    "BON1", "BON2", "BKEY", "RKEY", "YKEY", "BSKU", "RSKU", "YSKU", "STIM", "MEDI", "SOUL", "PINV",
    "PSTR", "PINS", "MEGA", "SUIT", "PMAP", "PVIS", "CLIP", "AMMO", "ROCK", "BROK", "CELL", "CELP",
    "SHEL", "SBOX", "BPAK", "BFUG", "MGUN", "CSAW", "LAUN", "PLAS", "SHOT", "SGN2", "COLU", "SMT2",
    "GOR1", "POL2", "POL5", "POL4", "POL3", "POL1", "POL6", "GOR2", "GOR3", "GOR4", "GOR5", "SMIT",
    "COL1", "COL2", "COL3", "COL4", "CAND", "CBRA", "COL6", "TRE1", "TRE2", "ELEC", "CEYE", "FSKU",
    "COL5", "TBLU", "TGRN", "TRED", "SMBT", "SMGT", "SMRT", "HDB1", "HDB2", "HDB3", "HDB4", "HDB5",
    "HDB6", "POB1", "POB2", "BRS1", "TLMP", "TLP2", "TNT1", "DOGS", "PLS1", "PLS2", "BON3", "BON4",
    "BLD2", /* 100 extra sprite names to use in dehacked patches */
    "SP00", "SP01", "SP02", "SP03", "SP04", "SP05", "SP06", "SP07", "SP08", "SP09", "SP10", "SP11",
    "SP12", "SP13", "SP14", "SP15", "SP16", "SP17", "SP18", "SP19", "SP20", "SP21", "SP22", "SP23",
    "SP24", "SP25", "SP26", "SP27", "SP28", "SP29", "SP30", "SP31", "SP32", "SP33", "SP34", "SP35",
    "SP36", "SP37", "SP38", "SP39", "SP40", "SP41", "SP42", "SP43", "SP44", "SP45", "SP46", "SP47",
    "SP48", "SP49", "SP50", "SP51", "SP52", "SP53", "SP54", "SP55", "SP56", "SP57", "SP58", "SP59",
    "SP60", "SP61", "SP62", "SP63", "SP64", "SP65", "SP66", "SP67", "SP68", "SP69", "SP70", "SP71",
    "SP72", "SP73", "SP74", "SP75", "SP76", "SP77", "SP78", "SP79", "SP80", "SP81", "SP82", "SP83",
    "SP84", "SP85", "SP86", "SP87", "SP88", "SP89", "SP90", "SP91", "SP92", "SP93", "SP94", "SP95",
    "SP96", "SP97", "SP98", "", "",
];

lazy_static! {
    pub(crate) static ref MOBJINFO: RwLock<[MobjInfo; 1/*MobjType::NUMMOBJTYPES as usize*/]> =
        RwLock::new([MobjInfo {
            doomednum: -1,
            spawnstate: Statenum::PLAY as _,
            spawnhealth: 100,
            seestate: Statenum::PLAY_RUN1 as _,
            seesound: Sfx::None as _,
            reactiontime: 0,
            attacksound: Sfx::None as _,
            painstate: Statenum::PLAY_PAIN as _,
            painchance: 255,
            painsound: Sfx::PLPAIN as _,
            meleestate: Statenum::NULL as _,
            missilestate: Statenum::PLAY_ATK1 as _,
            deathstate: Statenum::PLAY_DIE1 as _,
            xdeathstate: Statenum::PLAY_XDIE1 as _,
            deathsound: Sfx::PLDETH as _,
            speed: 0,
            radius: 16 * FRACUNIT as i32,
            height: 56 * FRACUNIT as i32,
            mass: 100,
            damage: 0,
            activesound: Sfx::None as _,
            flags: MobjFlag::SOLID.bits() | MobjFlag::SHOOTABLE.bits() | MobjFlag::DROPOFF.bits() | MobjFlag::PICKUP.bits() | MobjFlag::NOTDMATCH.bits(),
            raisestate: Statenum::NULL as _,
            droppeditem: MobjType::NULL as _,
        }]);
}
