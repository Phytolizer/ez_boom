#[allow(dead_code)]
pub(crate) struct MusicInfo {
    pub(crate) name: &'static str,
    pub(crate) lumpnum: i32,
    pub(crate) data: Vec<u8>,
    pub(crate) handle: i32,
}

impl MusicInfo {
    pub(crate) const fn new(name: &'static str) -> Self {
        Self {
            name,
            lumpnum: 0,
            data: vec![],
            handle: 0,
        }
    }
}

#[allow(dead_code)]
pub(crate) struct SfxInfo {
    pub(crate) name: &'static str,
    pub(crate) singularity: bool,
    pub(crate) priority: i32,
    pub(crate) link: Option<usize>,
    pub(crate) pitch: i32,
    pub(crate) volume: i32,
    pub(crate) data: Vec<u8>,
    pub(crate) usefulness: i32,
    pub(crate) lumpnum: i32,
}

impl SfxInfo {
    pub(crate) const fn new(
        name: &'static str,
        singularity: bool,
        priority: i32,
        link: Option<usize>,
        pitch: i32,
        volume: i32,
        data: Vec<u8>,
    ) -> Self {
        Self {
            name,
            singularity,
            priority,
            link,
            pitch,
            volume,
            data,
            usefulness: 0,
            lumpnum: 0,
        }
    }
}

#[allow(non_camel_case_types, dead_code)]
pub(crate) enum Music {
    None,
    E1M1,
    E1M2,
    E1M3,
    E1M4,
    E1M5,
    E1M6,
    E1M7,
    E1M8,
    E1M9,
    E2M1,
    E2M2,
    E2M3,
    E2M4,
    E2M5,
    E2M6,
    E2M7,
    E2M8,
    E2M9,
    E3M1,
    E3M2,
    E3M3,
    E3M4,
    E3M5,
    E3M6,
    E3M7,
    E3M8,
    E3M9,
    INTER,
    INTRO,
    BUNNY,
    VICTOR,
    INTROA,
    RUNNIN,
    STALKS,
    COUNTD,
    BETWEE,
    DOOM,
    THE_DA,
    SHAWN,
    DDTBLU,
    IN_CIT,
    DEAD,
    STLKS2,
    THEDA2,
    DOOM2,
    DDTBL2,
    RUNNI2,
    DEAD2,
    STLKS3,
    ROMERO,
    SHAWN2,
    MESSAG,
    COUNT2,
    DDTBL3,
    AMPIE,
    THEDA3,
    ADRIAN,
    MESSG2,
    ROMER2,
    TENSE,
    SHAWN3,
    OPENIN,
    EVIL,
    ULTIMA,
    READ_M,
    DM2TTL,
    DM2INT,

    NUMMUSIC,
}

#[allow(dead_code)]
pub(crate) enum Sfx {
    None,
    PISTOL,
    SHOTGN,
    SGCOCK,
    DSHTGN,
    DBOPN,
    DBCLS,
    DBLOAD,
    PLASMA,
    BFG,
    SAWUP,
    SAWIDL,
    SAWFUL,
    SAWHIT,
    RLAUNC,
    RXPLOD,
    FIRSHT,
    FIRXPL,
    PSTART,
    PSTOP,
    DOROPN,
    DORCLS,
    STNMOV,
    SWTCHN,
    SWTCHX,
    PLPAIN,
    DMPAIN,
    POPAIN,
    VIPAIN,
    MNPAIN,
    PEPAIN,
    SLOP,
    ITEMUP,
    WPNUP,
    OOF,
    TELEPT,
    POSIT1,
    POSIT2,
    POSIT3,
    BGSIT1,
    BGSIT2,
    SGTSIT,
    CACSIT,
    BRSSIT,
    CYBSIT,
    SPISIT,
    BSPSIT,
    KNTSIT,
    VILSIT,
    MANSIT,
    PESIT,
    SKLATK,
    SGTATK,
    SKEPCH,
    VILATK,
    CLAW,
    SKESWG,
    PLDETH,
    PDIEHI,
    PODTH1,
    PODTH2,
    PODTH3,
    BGDTH1,
    BGDTH2,
    SGTDTH,
    CACDTH,
    SKLDTH,
    BRSDTH,
    CYBDTH,
    SPIDTH,
    BSPDTH,
    VILDTH,
    KNTDTH,
    PEDTH,
    SKEDTH,
    POSACT,
    BGACT,
    DMACT,
    BSPACT,
    BSPWLK,
    VILACT,
    NOWAY,
    BAREXP,
    PUNCH,
    HOOF,
    METAL,
    CHGUN,
    TINK,
    BDOPN,
    BDCLS,
    ITMBK,
    FLAME,
    FLAMST,
    GETPOW,
    BOSPIT,
    BOSCUB,
    BOSSIT,
    BOSPN,
    BOSDTH,
    MANATK,
    MANDTH,
    SSSIT,
    SSDTH,
    KEENPN,
    KEENDT,
    SKEACT,
    SKESIT,
    SKEATK,
    RADIO,

    /* killough 11/98: dog sounds */
    DGSIT,
    DGATK,
    DGACT,
    DGDTH,
    DGPAIN,

    // e6y
    SECRET,
    GIBDTH,

    NUMSFX,
}

pub(crate) const MUSIC: [MusicInfo; Music::NUMMUSIC as usize + 1] = [
    MusicInfo::new(""),
    MusicInfo::new("e1m1"),
    MusicInfo::new("e1m2"),
    MusicInfo::new("e1m3"),
    MusicInfo::new("e1m4"),
    MusicInfo::new("e1m5"),
    MusicInfo::new("e1m6"),
    MusicInfo::new("e1m7"),
    MusicInfo::new("e1m8"),
    MusicInfo::new("e1m9"),
    MusicInfo::new("e2m1"),
    MusicInfo::new("e2m2"),
    MusicInfo::new("e2m3"),
    MusicInfo::new("e2m4"),
    MusicInfo::new("e2m5"),
    MusicInfo::new("e2m6"),
    MusicInfo::new("e2m7"),
    MusicInfo::new("e2m8"),
    MusicInfo::new("e2m9"),
    MusicInfo::new("e3m1"),
    MusicInfo::new("e3m2"),
    MusicInfo::new("e3m3"),
    MusicInfo::new("e3m4"),
    MusicInfo::new("e3m5"),
    MusicInfo::new("e3m6"),
    MusicInfo::new("e3m7"),
    MusicInfo::new("e3m8"),
    MusicInfo::new("e3m9"),
    MusicInfo::new("inter"),
    MusicInfo::new("intro"),
    MusicInfo::new("bunny"),
    MusicInfo::new("victor"),
    MusicInfo::new("introa"),
    MusicInfo::new("runnin"),
    MusicInfo::new("stalks"),
    MusicInfo::new("countd"),
    MusicInfo::new("betwee"),
    MusicInfo::new("doom"),
    MusicInfo::new("the_da"),
    MusicInfo::new("shawn"),
    MusicInfo::new("ddtblu"),
    MusicInfo::new("in_cit"),
    MusicInfo::new("dead"),
    MusicInfo::new("stlks2"),
    MusicInfo::new("theda2"),
    MusicInfo::new("doom2"),
    MusicInfo::new("ddtbl2"),
    MusicInfo::new("runni2"),
    MusicInfo::new("dead2"),
    MusicInfo::new("stlks3"),
    MusicInfo::new("romero"),
    MusicInfo::new("shawn2"),
    MusicInfo::new("messag"),
    MusicInfo::new("count2"),
    MusicInfo::new("ddtbl3"),
    MusicInfo::new("ampie"),
    MusicInfo::new("theda3"),
    MusicInfo::new("adrian"),
    MusicInfo::new("messg2"),
    MusicInfo::new("romer2"),
    MusicInfo::new("tense"),
    MusicInfo::new("shawn3"),
    MusicInfo::new("openin"),
    MusicInfo::new("evil"),
    MusicInfo::new("ultima"),
    MusicInfo::new("read_m"),
    MusicInfo::new("dm2ttl"),
    MusicInfo::new("dm2int"),
    // custom music from MUSINFO lump
    MusicInfo::new("musinfo"),
];

pub(crate) const SFX: [SfxInfo; Sfx::NUMSFX as usize] = [
    SfxInfo::new("none", false, 0, None, -1, -1, vec![]),
    SfxInfo::new("pistol", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("shotgn", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("sgcock", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("dshtgn", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("dbopn", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("dbcls", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("dbload", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("plasma", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("bfg", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("sawup", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("sawidl", false, 118, None, -1, -1, vec![]),
    SfxInfo::new("sawful", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("sawhit", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("rlaunc", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("rxplod", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("firsht", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("firxpl", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("pstart", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("pstop", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("doropn", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("dorcls", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("stnmov", false, 119, None, -1, -1, vec![]),
    SfxInfo::new("swtchn", false, 78, None, -1, -1, vec![]),
    SfxInfo::new("swtchx", false, 78, None, -1, -1, vec![]),
    SfxInfo::new("plpain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("dmpain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("popain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("vipain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("mnpain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("pepain", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("slop", false, 78, None, -1, -1, vec![]),
    SfxInfo::new("itemup", true, 78, None, -1, -1, vec![]),
    SfxInfo::new("wpnup", true, 78, None, -1, -1, vec![]),
    SfxInfo::new("oof", false, 96, None, -1, -1, vec![]),
    SfxInfo::new("telept", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("posit1", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("posit2", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("posit3", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("bgsit1", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("bgsit2", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("sgtsit", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("cacsit", true, 98, None, -1, -1, vec![]),
    SfxInfo::new("brssit", true, 94, None, -1, -1, vec![]),
    SfxInfo::new("cybsit", true, 92, None, -1, -1, vec![]),
    SfxInfo::new("spisit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("bspsit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("kntsit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("vilsit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("mansit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("pesit", true, 90, None, -1, -1, vec![]),
    SfxInfo::new("sklatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("sgtatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skepch", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("vilatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("claw", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skeswg", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("pldeth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("pdiehi", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("podth1", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("podth2", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("podth3", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("bgdth1", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("bgdth2", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("sgtdth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("cacdth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skldth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("brsdth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("cybdth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("spidth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("bspdth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("vildth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("kntdth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("pedth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("skedth", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("posact", true, 120, None, -1, -1, vec![]),
    SfxInfo::new("bgact", true, 120, None, -1, -1, vec![]),
    SfxInfo::new("dmact", true, 120, None, -1, -1, vec![]),
    SfxInfo::new("bspact", true, 100, None, -1, -1, vec![]),
    SfxInfo::new("bspwlk", true, 100, None, -1, -1, vec![]),
    SfxInfo::new("vilact", true, 100, None, -1, -1, vec![]),
    SfxInfo::new("noway", false, 78, None, -1, -1, vec![]),
    SfxInfo::new("barexp", false, 60, None, -1, -1, vec![]),
    SfxInfo::new("punch", false, 64, None, -1, -1, vec![]),
    SfxInfo::new("hoof", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("metal", false, 70, None, -1, -1, vec![]),
    SfxInfo::new(
        "chgun",
        false,
        64,
        Some(Sfx::PISTOL as usize),
        150,
        0,
        vec![],
    ),
    SfxInfo::new("tink", false, 60, None, -1, -1, vec![]),
    SfxInfo::new("bdopn", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("bdcls", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("itmbk", false, 100, None, -1, -1, vec![]),
    SfxInfo::new("flame", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("flamst", false, 32, None, -1, -1, vec![]),
    SfxInfo::new("getpow", false, 60, None, -1, -1, vec![]),
    SfxInfo::new("bospit", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("boscub", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("bossit", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("bospn", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("bosdth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("manatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("mandth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("sssit", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("ssdth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("keenpn", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("keendt", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skeact", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skesit", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("skeatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("radio", false, 60, None, -1, -1, vec![]),
    // killough 11/98: dog sounds
    SfxInfo::new("dgsit", false, 98, None, -1, -1, vec![]),
    SfxInfo::new("dgatk", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("dgact", false, 120, None, -1, -1, vec![]),
    SfxInfo::new("dgdth", false, 70, None, -1, -1, vec![]),
    SfxInfo::new("dgpain", false, 96, None, -1, -1, vec![]),
    // e6y
    SfxInfo::new("secret", false, 60, None, -1, -1, vec![]),
    SfxInfo::new("gibdth", false, 60, None, -1, -1, vec![]),
];
